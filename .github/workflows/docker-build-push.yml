name: Docker Build, Push, and Release

on:
  pull_request:
    types:
      - closed
    branches:
      - main
    paths:
      - 'globe_news_post_processor/**'
      - 'crontab'
      - 'main.py'
      - 'Dockerfile'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-push-and-release:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' && github.event.pull_request.head.ref == 'dev'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.WORKFLOW_TOKEN }}

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v4
        with:
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}

      - name: Get version
        id: get_version
        run: echo "VERSION=$(date +'%Y.%m.%d')-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            Changes in this Release:
            ${{ github.event.pull_request.body }}
            
            Docker Image:
            ghcr.io/${{ github.repository }}:${{ github.sha }}

          draft: false
          prerelease: false